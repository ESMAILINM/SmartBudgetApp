@page "/Gastos/Create"
@inject GastosServices gastosService
@inject NavigationManager navigation
@rendermode InteractiveServer

<PageTitle>Registrar Gasto</PageTitle>

<EditForm Model="gasto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container p-4 bg-light rounded shadow-lg">
        <div class="card shadow">
            <div class="card-header text-center bg-light text-dark">
                <h3 class="card-title"><strong>Registro de Gasto</strong></h3>
            </div>

            <div class="card-body">
                @* Descripción *@
                <div class="mb-3">
                    <label class="form-label"><strong>Descripción</strong></label>
                    <InputText id="Descripcion" class="form-control" @bind-value="gasto.Descripcion" />
                    <ValidationMessage For="@(() => gasto.Descripcion)" />
                </div>

                @* Monto *@
                <div class="mb-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber id="Monto" class="form-control" @bind-value="gasto.Monto" />
                    <ValidationMessage For="@(() => gasto.Monto)" />
                </div>

                @* Fecha *@
                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate id="Fecha" class="form-control" @bind-value="gasto.Fecha" />
                    <ValidationMessage For="@(() => gasto.Fecha)" />
                </div>

                @* La categoría ya no es necesaria. *@
            </div>

            <div class="card-footer text-center">
                <button type="button" class="btn btn-outline-secondary" @onclick="Nuevo">
                    <i class="bi bi-plus"></i> Nuevo
                </button>
                <button type="submit" class="btn btn-outline-success">
                    <i class="bi bi-check-circle-fill"></i> Guardar
                </button>
                <a href="/Gastos/Index" class="btn btn-outline-danger" @onclick="Volver">
                    <i class="bi bi-arrow-bar-left"></i> Retroceder
                </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Gastos gasto = new Gastos();
    public List<Gastos> gastos = new List<Gastos>();
    public string MensajeError = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        gasto.Fecha = DateTime.Now;  // Asignar fecha predeterminada
    }

    public async Task Guardar()
    {
        try
        {
            // Guardar el gasto sin la categoría
            await gastosService.Guardar(gasto);
            gasto = new Gastos { Fecha = DateTime.Now };  // Limpiar el formulario
            Volver();
        }
        catch (Exception ex)
        {
            MensajeError = $"Error al guardar el gasto: {ex.Message}";
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Gastos/Index");
    }

    public void Nuevo()
    {
        gasto = new Gastos { Fecha = DateTime.Now };  // Limpiar el formulario para un nuevo gasto
    }
}
