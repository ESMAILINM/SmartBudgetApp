@page "/Gastos/Edit/{GastoId:int}"
@inject GastosServices gastosService
@inject CategoriasService categoriasService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<div class="container card shadow-lg">
    <div class="card-header text-center bg-primary text-white">
        <h3><strong>Editar Gasto</strong></h3>
    </div>

    <div class="card-body">
        @if (gasto != null)
        {
            <EditForm Model="gasto" OnValidSubmit="GuardarGasto">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="descripcion" class="form-label fw-bold">Descripción:</label>
                    <InputText id="descripcion" class="form-control" @bind-Value="gasto.Descripcion" />
                </div>

                <div class="mb-3">
                    <label for="monto" class="form-label fw-bold">Monto:</label>
                    <InputNumber id="monto" class="form-control" @bind-Value="gasto.Monto" />
                </div>

                <div class="mb-3">
                    <label for="fecha" class="form-label fw-bold">Fecha:</label>
                    <InputDate id="fecha" class="form-control" @bind-Value="gasto.Fecha" />
                </div>

                

                <div class="text-end">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-save"></i> Guardar
                    </button>
                    <button type="button" class="btn btn-secondary" @onclick="CancelarEdicion">
                        <i class="bi bi-arrow-left-circle"></i> Volver
                    </button>
                </div>
            </EditForm>
        }
        else
        {
            <p>Gasto no encontrado.</p>
        }
    </div>
</div>

@code {
    [Parameter] public int GastoId { get; set; }
    public Gastos gasto { get; set; }
    public List<Categorias> categorias { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        categorias = await categoriasService.Listar(a => true);
        gasto = await gastosService.Buscar(GastoId);

        if (gasto == null)
        {
            navigationManager.NavigateTo("/Gastos/Index");
        }
    }

    private async Task GuardarGasto()
    {
        await gastosService.Modificar(gasto);
        navigationManager.NavigateTo("/Gastos/Index");
    }

    private void CancelarEdicion()
    {
        navigationManager.NavigateTo("/Gastos/Index");
    }
}
