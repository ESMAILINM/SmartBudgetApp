@implements IDisposable

@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IJSRuntime JSRuntime

<div class="top-row ps-3 navbar justify-content-center">
    <a class="navbar-brand mt-3 text-white" href="/" style="font-family: 'Handlee', cursive; font-size: 35px;">
        SmartBudget
    </a>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
      
            <div class="nav-item px-3 mt-5">
                <NavLink class="nav-link" href="/Home" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Ingresos/Index" Match="NavLinkMatch.All">
                    <span class="bi bi-cash-coin fs-5 d-flex align-items-center" aria-hidden="true"></span> Ingresos
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Gastos/Index" Match="NavLinkMatch.All">
                    <span class="bi bi-credit-card fs-5 d-flex align-items-center" aria-hidden="true"></span> Gastos
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Facturas/Index" Match="NavLinkMatch.All">
                    <span class="bi bi-receipt-cutoff fs-5 d-flex align-items-center" aria-hidden="true"></span> Facturas
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Ventas/Index" Match="NavLinkMatch.All">
                    <span class="bi bi-bag-check-fill fs-5 d-flex align-items-center" aria-hidden="true"></span> Ventas
                </NavLink>
            </div>
            <AuthorizeView Roles="Admin">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Usuarios/Administrar" Match="NavLinkMatch.All">
                        <span class=" bi bi-person-fill-lock fs-5 d-flex align-items-center" aria-hidden="true"></span> Administrar Usuarios
                    </NavLink>
                </div>
            </AuthorizeView>
       

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Mi Perfil
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@(currentUrl)" />
                        <button type="submit" class="nav-link" @onclick="OnLogout">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    
    private async Task OnLogout()
    {
       
        NavigationManager.NavigateTo("/Account/Login", forceLoad: true);
    }

    public void Dispose()
    {
       
        if (NavigationManager != null)
        {
            NavigationManager.LocationChanged -= OnLocationChanged;
        }
    }
}
